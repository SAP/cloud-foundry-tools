{
	"name": "vscode-wing-cf-tools",
	"displayName": "Cloud Foundry Tools",
	"version": "6.0.1",
	"description": "Vscode extension of Cloud Foundry tools",
	"categories": [
		"Other"
	],
	"bugs": {
		"url": "https://github.com/sap-staging/cloud-foundry-tools.git/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/sap-staging/cloud-foundry-tools.git"
	},
	"license": "Apache 2.0",
	"author": "SAP SE",
	"publisher": "SAP",
	"main": "./dist/extension.js",
	"scripts": {
		"build": "npm run compile && webpack --mode production && vsce package",
		"compile": "tsc -p ./",
		"lint": "eslint . --ext .ts,.tsx --cache",
		"lint:fix": "eslint . --ext .ts,.tsx --cache --fix",
		"pretest": "npm run compile & npm run lint",
		"test": "nyc mocha -p tsconfig.json --config ./.mocharc.yaml --no-parallel",
		"vscode:prepublish": "npm run compile && webpack --mode production",
		"watch": "tsc -watch -p ./",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch"
	},
	"contributes": {
		"commands": [
			{
				"command": "cf.login",
				"title": "CF: Login to cloud foundry",
				"icon": "resources/common/login.svg"
			},
			{
				"command": "cf.set.orgspace",
				"title": "CF: Set Org and Space"
			},
			{
				"command": "cf.select.space",
				"title": "CF: Select a space from your allowed spaces"
			},
			{
				"command": "cf.targets.create",
				"title": "CF: Create new target Cloud Foundry",
				"icon": "resources/common/login.svg"
			},
			{
				"command": "cf.targets.reload",
				"title": "CF: Reload targets tree"
			},
			{
				"command": "cf.target.set",
				"title": "CF: Set Current target Cloud Foundry"
			},
			{
				"command": "cf.target.delete",
				"title": "CF: Delete target Cloud Foundry"
			},
			{
				"command": "cf.services.bind.local",
				"title": "CF: Bind a service to a locally run application"
			},
			{
				"command": "cf.services.unbind",
				"title": "CF: Unbind a service from a locally run application - (Hidden from command palette)"
			},
			{
				"command": "cf.services.bind",
				"title": "Bind a service to a locally run application - (Hidden from command palette)"
			},
			{
				"command": "cf.services.binding.state",
				"title": "Get bind state to a service - (Hidden from command palette)"
			},
			{
				"command": "cf.services.create",
				"title": "CF: Create a new service instance",
				"icon": "resources/common/login.svg"
			},
			{
				"command": "cf.ups.create",
				"title": "CF: Create a user provided service instance"
			},
			{
				"command": "cf.deploy-service.api",
				"title": "CF: Make a rest API call to the Deploy Service"
			},
			{
				"command": "cf.services.get-space-services",
				"title": "CF: Fetch available services (and ups) from particular space"
			},
			{
				"command": "cf.services.get-ups-services",
				"title": "CF: Fetch available User Provided services from particular space"
			},
			{
				"command": "cf.services.get-services",
				"title": "CF: Fetch available services from particular space"
			}
		],
		"configuration": {
			"type": "object",
			"title": "CloudFoundryTools",
			"properties": {
				"CloudFoundryTools.loggingLevel": {
					"type": "string",
					"enum": [
						"off",
						"fatal",
						"error",
						"warn",
						"info",
						"debug",
						"trace"
					],
					"default": "error",
					"description": "The verbosity of logging. The Order is None < fatal < error < warn < info < debug < trace.",
					"scope": "resource"
				},
				"CloudFoundryTools.sourceLocationTracking": {
					"type": "boolean",
					"default": false,
					"description": "Should Source Code Location Info be added to log entries, DANGER - May be very slow, only use in debugging scenarios",
					"scope": "resource"
				}
			}
		},
		"menus": {
			"commandPalette": [
				{
					"when": "false",
					"command": "cf.target.delete"
				},
				{
					"when": "false",
					"command": "cf.deploy-service.api"
				},
				{
					"when": "false",
					"command": "cf.target.set"
				},
				{
					"when": "false",
					"command": "cf.services.unbind"
				},
				{
					"when": "false",
					"command": "cf.services.bind"
				},
				{
					"when": "false",
					"command": "cf.services.binding.state"
				},
				{
					"when": "false",
					"command": "cf.services.get-space-services"
				},
				{
					"when": "false",
					"command": "cf.services.get-ups-services"
				},
				{
					"when": "false",
					"command": "cf.services.get-services"
				}
			],
			"view/title": [
				{
					"command": "cf.targets.create",
					"when": "view == cfView",
					"group": "navigation@1"
				},
				{
					"command": "cf.targets.reload",
					"when": "view == cfView"
				}
			],
			"view/item/context": [
				{
					"command": "cf.services.create",
					"when": "view == cfView && viewItem == Services",
					"group": "inline"
				},
				{
					"command": "cf.login",
					"when": "view == cfView && viewItem == cf-login-required",
					"group": "inline"
				},
				{
					"command": "cf.services.bind.local",
					"when": "view == cfView && viewItem == cf-service"
				},
				{
					"command": "cf.target.set",
					"when": "view == cfView && viewItem == cf-target"
				},
				{
					"command": "cf.target.delete",
					"when": "view == cfView && viewItem == cf-target"
				}
			]
		},
		"problemMatchers": [
			{
				"name": "chisel-client",
				"pattern": [
					{
						"regexp": "!!!DO NOT MATCH ME!!!",
						"file": 1,
						"location": 2,
						"message": 3
					}
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^.+client: Connecting.+",
					"endsPattern": "^.+client: Connected.+"
				}
			}
		],
		"views": {
			"cf-view": [
				{
					"id": "cfView",
					"name": "Targets"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "cf-view",
					"title": "Cloud Foundry",
					"icon": "resources/common/cf.svg"
				}
			]
		}
	},
	"activationEvents": [
		"*"
	],
	"husky": {
		"hooks": {
			"commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
		}
	},
	"commitlint": {
		"extends": [
			"@commitlint/config-conventional"
		]
	},
	"config": {
		"commitizen": {
			"path": "cz-conventional-changelog"
		}
	},
	"dependencies": {
		"@sap/cf-tools": "^1.0.2",
		"@sap/swa-for-sapbas-vsx": "1.1.13",
		"@sap/wing-run-config-types": "4.1.5",
		"@vscode-logging/wrapper": "1.0.0",
		"comment-json": "4.1.0",
		"fs-extra": "9.1.0",
		"lodash": "4.17.21",
		"properties-reader": "2.2.0",
		"update": "^0.7.4",
		"url": "0.11.0"
	},
	"devDependencies": {
		"@commitlint/cli": "12.0.1",
		"@commitlint/config-conventional": "12.0.1",
		"@types/chai": "^4.1.7",
		"@types/comment-json": "2.4.2",
		"@types/fs-extra": "^9.0.3",
		"@types/lodash": "^4.14.161",
		"@types/mocha": "^8.2.0",
		"@types/node": "^14.14.6",
		"@types/properties-reader": "2.1.0",
		"@types/rimraf": "^3.0.0",
		"@types/sinon": "^9.0.8",
		"@types/vscode": "^1.43.0",
		"@typescript-eslint/eslint-plugin": "^2.30.0",
		"@typescript-eslint/parser": "^2.30.0",
		"@vscode-logging/types": "0.1.3",
		"chai": "^4.2.0",
		"clean-webpack-plugin": "^3.0.0",
		"coveralls": "^3.1.0",
		"cz-conventional-changelog": "3.3.0",
		"eslint": "^7.20.0",
		"eslint-config-prettier": "^8.1.0",
		"grunt": "^1.0.4",
		"grunt-contrib-clean": "^2.0.0",
		"grunt-contrib-copy": "^1.0.0",
		"grunt-mkdir": "^1.0.0",
		"grunt-move": "^1.0.1",
		"grunt-run": "^0.8.0",
		"grunt-text-replace": "^0.4.0",
		"husky": "4.3.8",
		"mocha": "^8.2.1",
		"nyc": "^15.1.0",
		"prettier": "^2.0.5",
		"rimraf": "^3.0.2",
		"sinon": "^10.0.0",
		"temp-dir": "2.0.0",
		"ts-loader": "^8.0.12",
		"ts-node": "^9.1.1",
		"typescript": "^3.9.7",
		"vsce": "^1.61.0",
		"webpack": "^5.5.0",
		"webpack-cli": "^4.2.0"
	},
	"engines": {
		"vscode": "^1.43.0"
	},
	"icon": "resources/icon.png"
}
