version: 2.1 # use CircleCI 2.1

jobs: # a collection of steps
  compliance:
    docker:
      - image: cimg/python:3.8.1
    working_directory: ~/workdir
    steps:
      - checkout
      - run:
          name: compliance check
          command: |
            pip3 install --user reuse
            ~/.local/bin/reuse lint

  build-and-test:
    docker:
      - image: cimg/node:16.12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install
          command: npm install
      - run:
          name: test
          command: npm run test
      - run:
          command: cat ./reports/coverage/lcov.info | ./node_modules/.bin/coveralls
          environment:
            COVERALLS_SERVICE_NAME: circle-ci
            COVERALLS_GIT_BRANCH: ${CIRCLE_BRANCH}
      - run:
          name: Define environment variable with lastest commit's message
          command: |
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint commit message
          command: echo "$COMMIT_MESSAGE" | npx commitlint      
      - run:
          name: package
          command: npm run build
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths: 
           # https://golang.org/pkg/path/filepath/#Match
            - vscode-wing-cf-tools-*
  
  deploy:
    docker:
      - image: cimg/go:1.13
    steps:
      - attach_workspace:
          at: ./dest
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} ./dest/ 

workflows:
  version: 2
  test-deploy:
    jobs:
      - compliance
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
