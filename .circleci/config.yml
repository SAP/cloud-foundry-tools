version: 2.1 # use CircleCI 2.1

jobs: # a collection of steps
  compliance:
    docker:
      - image: cimg/python:3.8.1
    working_directory: ~/workdir
    steps:
      - checkout
      - run:
          name: compliance check
          command: |
            pip3 install --user reuse
            ~/.local/bin/reuse lint

  build-and-test-node14:
    docker:
      - image: cimg/node:14.19
    steps:
      - checkout
      - run: yarn
      - run: yarn ci

  build-and-test-node16:
    docker:
      - image: cimg/node:16.15
    working_directory: ~/workdir
    steps:
      - checkout
      - run: yarn
      - run: yarn ci
      - run:
          name: Define environment variable with lastest commit's message
          command: |
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint commit message
          command: echo "$COMMIT_MESSAGE" | npx commitlint

  
  prepare-vsix:
    docker:
      - image: cimg/node:16.15
    working_directory: ~/workdir
    steps:
      - checkout
      - run: yarn
      - run: yarn ci
      - run: mkdir -p artifacts && cp packages/*/*.vsix ./artifacts
      - run:
          name: "Inspect Artifacts Folder"
          working_directory: ./artifacts
          command: ls -la
      - persist_to_workspace:
          root: "./artifacts"
          paths:
            # https://golang.org/pkg/path/filepath/#Match
            - "*.vsix"

  deploy-gh-releases:
    docker:
      - image: cimg/go:1.13
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Inspect Artifacts Folder"
          working_directory: ./artifacts
          command: ls -la
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=${CIRCLE_TAG}
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/

workflows:
  version: 2
  voter:
    jobs:
      - compliance
      - build-and-test-node14
      - build-and-test-node16
  release:
    jobs:
      - prepare-vsix:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy-gh-releases:
          requires:
            - prepare-vsix
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/